import GradeTestContainer from "@/components/Tests/GradeTestContainer";
import ErrorMessage from "@/components/Tests/ErrorMessage";
import EmptyTestsMessage from "@/components/Tests/EmptyTestsMessage";
import { Test } from "@/types/test";

interface Props {
  params: Promise<{ grade: string }>;
}

const validEnglishGrades = ["A1", "A2", "B1", "B2", "C1", "C2"];

const baseUrl = process.env.NEXT_PUBLIC_APP_URL;

export async function generateStaticParams() {
  return validEnglishGrades.map((grade) => ({ grade }));
}

export default async function EnglishTestPage({ params }: Props) {
  try {
    const { grade } = await params;

    console.log(`EnglishTestPage accessed with grade: ${grade}`); // Debug log

    if (!validEnglishGrades.includes(grade)) {
      return (
        <ErrorMessage title="–ü–æ–º–∏–ª–∫–∞" message={`–ù–µ–≤–∞–ª—ñ–¥–Ω–∏–π —Ä—ñ–≤–µ–Ω—å: ${grade}`} />
      );
    }

    console.log(`üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–µ—Å—Ç—ñ–≤ –¥–ª—è —Ä—ñ–≤–Ω—è ${grade}`);

    const res = await fetch(`${baseUrl}/api/questions?class=${grade}`, {
      cache: "no-store",
    });

    if (!res.ok) {
      const errorText = await res.text();
      console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ API: ${errorText}`);
      return (
        <ErrorMessage
          title={`–¢–µ—Å—Ç–∏ –∑ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó –¥–ª—è —Ä—ñ–≤–Ω—è ${grade}`}
          message={`–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–µ—Å—Ç—ñ–≤: ${res.status} ${res.statusText}`}
        />
      );
    }

    const tests: Test[] = await res.json();
    console.log(`–¢–µ—Å—Ç–∏ –¥–ª—è class=${grade}:`, tests); // Debug log

    if (tests.length === 0) {
      return (
        <EmptyTestsMessage
          title={`–¢–µ—Å—Ç–∏ –∑ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó –¥–ª—è —Ä—ñ–≤–Ω—è ${grade}`}
          message={`–¢–µ—Å—Ç–∏ –¥–ª—è —Ä—ñ–≤–Ω—è ${grade} –≤—ñ–¥—Å—É—Ç–Ω—ñ.`}
        />
      );
    }

    return <GradeTestContainer grade={grade} />;
  } catch (error: any) {
    console.error(`‚ùå –°–µ—Ä–≤–µ—Ä–Ω–∞ –ø–æ–º–∏–ª–∫–∞: ${error.message}`, error.stack);
    return (
      <ErrorMessage
        title="–ü–æ–º–∏–ª–∫–∞"
        message={`–°—Ç–∞–ª–∞—Å—è —Å–µ—Ä–≤–µ—Ä–Ω–∞ –ø–æ–º–∏–ª–∫–∞: ${error.message}`}
      />
    );
  }
}
