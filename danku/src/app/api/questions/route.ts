import { NextRequest, NextResponse } from "next/server";
import clientPromise from "@/lib/mongodb";

export async function GET() {
  console.log("üì• GET /api/questions –≤–∏–∫–ª–∏–∫–∞–Ω–æ");
  try {
    const client = await clientPromise;
    const db = client.db("testdb");

    console.log("üìÇ –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ–ª–µ–∫—Ü—ñ—é 'questions'");
    const questions = await db.collection("questions").find({}).toArray();

    console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –ø–∏—Ç–∞–Ω—å: ${questions.length}`);
    return NextResponse.json(questions);
  } catch (error: any) {
    console.error(
      "‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ GET /api/questions:",
      error.message,
      error.stack
    );
    return NextResponse.json(
      { error: "Failed to fetch questions", details: error.message },
      { status: 500 }
    );
  }
}

export async function POST(request: NextRequest) {
  console.log("üì• POST /api/questions –≤–∏–∫–ª–∏–∫–∞–Ω–æ");
  try {
    const data = await request.json();
    console.log("üì¶ –û—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω—ñ –∑ –∑–∞–ø–∏—Ç—É:", data);

    const client = await clientPromise;
    const db = client.db("testdb");

    console.log("üìù –í—Å—Ç–∞–≤–ª—è—î–º–æ –ø–∏—Ç–∞–Ω–Ω—è —É –±–∞–∑—É...");
    const result = await db.collection("questions").insertOne(data);

    console.log("‚úÖ –ü–∏—Ç–∞–Ω–Ω—è –¥–æ–¥–∞–Ω–æ –∑ ID:", result.insertedId);
    return NextResponse.json({
      message: "Question added",
      id: result.insertedId,
    });
  } catch (error: any) {
    console.error(
      "‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ POST /api/questions:",
      error.message,
      error.stack
    );
    return NextResponse.json(
      { error: "Failed to add question", details: error.message },
      { status: 500 }
    );
  }
}
